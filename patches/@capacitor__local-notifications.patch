diff --git a/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotification.java b/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotification.java
index 7463256d40cdf87580e2b7d20a29cf6f80de281a..eb0bff4429c22ebd81879e214f5ad888fabfe931 100644
--- a/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotification.java
+++ b/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotification.java
@@ -1,5 +1,6 @@
 package com.capacitorjs.plugins.localnotifications;
 
+import android.net.Uri;
 import android.content.ContentResolver;
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -107,7 +108,15 @@ public class LocalNotification {
     }
 
     public void setLargeIcon(String largeIcon) {
-        this.largeIcon = AssetUtil.getResourceBaseName(largeIcon);
+		if (largeIcon == null) {
+			this.largeIcon = null;
+			return;
+		}
+		if (largeIcon.startsWith("http://") || largeIcon.startsWith("https://") || largeIcon.startsWith("file://")) {
+			this.largeIcon = largeIcon;
+		} else {
+			this.largeIcon = AssetUtil.getResourceBaseName(largeIcon);
+		}
     }
 
     public void setInboxList(List<String> inboxList) {
@@ -343,21 +352,55 @@ public class LocalNotification {
 
         return resId;
     }
-
-    public Bitmap getLargeIcon(Context context) {
-        if (largeIcon != null) {
+	
+	public Bitmap getLargeIcon(Context context) {
+		if (largeIcon != null) {
+			try {
+				final AssetUtil assets = AssetUtil.getInstance(context);
+				Uri uri = assets.parse(largeIcon);
+				if (uri != Uri.EMPTY) {
+					return assets.getIconFromUri(uri);
+				} else {
+					return getLargeDrawableIcon(context);
+				}
+			} catch (Exception e) {
+				return getLargeDrawableIcon(context);
+			}
+		}
+		return null;
+	}
+	
+	public Bitmap getLargeDrawableIcon(Context context) {
+		if (largeIcon != null) {
             int resId = AssetUtil.getResourceID(context, largeIcon, "drawable");
             return BitmapFactory.decodeResource(context.getResources(), resId);
-        }
-
-        return null;
-    }
+		}
+		return null;
+	}
+		
 
     public boolean isScheduled() {
         return (
             this.schedule != null && (this.schedule.getOn() != null || this.schedule.getAt() != null || this.schedule.getEvery() != null)
         );
     }
+	
+	public Bitmap getBigImage(Context context) {
+	  if (attachments != null && attachments.size() > 0) {
+		try {
+		  LocalNotificationAttachment bp = attachments.get(0);
+		  String bpUrl = bp.getUrl();
+		  final AssetUtil assets = AssetUtil.getInstance(context);
+		  Uri uri = assets.parse(bpUrl);
+		  if (uri != Uri.EMPTY) {
+			return assets.getIconFromUri(uri);
+		  }
+		} catch (Exception e){
+		  e.printStackTrace();
+		}
+	  }
+	  return null;
+	}
 
     @Override
     public String toString() {
diff --git a/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotificationManager.java b/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotificationManager.java
index a1c896f39b64a13a043465dcd45479c52eb9dc42..ea88397bd3a371a36082bf9d2928c3263c357ef2 100644
--- a/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotificationManager.java
+++ b/android/src/main/java/com/capacitorjs/plugins/localnotifications/LocalNotificationManager.java
@@ -171,7 +171,8 @@ public class LocalNotificationManager {
             .setAutoCancel(localNotification.isAutoCancel())
             .setOngoing(localNotification.isOngoing())
             .setPriority(NotificationCompat.PRIORITY_DEFAULT)
-            .setGroupSummary(localNotification.isGroupSummary());
+            .setGroupSummary(localNotification.isGroupSummary())
+            .setShowWhen(false);
 
         if (localNotification.getLargeBody() != null) {
             // support multiline text
@@ -182,6 +183,13 @@ public class LocalNotificationManager {
             );
         }
 
+		if (localNotification.getAttachments() != null) {
+		  mBuilder.setStyle(
+			new NotificationCompat.BigPictureStyle()
+			  .bigPicture(localNotification.getBigImage(context))
+			);
+		}
+
         if (localNotification.getInboxList() != null) {
             NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();
             for (String line : localNotification.getInboxList()) {
